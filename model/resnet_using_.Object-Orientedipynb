{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from tensorflow.keras.models import Model\n",
    "from tensorflow.keras.layers import (\n",
    "    Input, Activation, Dense, Flatten, Conv2D, MaxPooling2D, \n",
    "    GlobalAveragePooling2D, AveragePooling2D, BatchNormalization, add)\n",
    "import tensorflow.keras.regularizers as regulizers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ConvWithBatchNorm(tf.keras.layers.Conv2D):\n",
    "    \n",
    "    def __init__(self, activation='relu', name='convbn', **kwargs):\n",
    "        \n",
    "        super().__init__(activation=None, name=name + '_c', **kwargs)\n",
    "        self.batch_norm = BatchNormalization(axis = -1 , name = name + '_bn')\n",
    "        self.activation =  Activation(activation , name = name + '_act') if activation is not None else None\n",
    "        \n",
    "        \n",
    "        \n",
    "    #def build( self, input_shape ):\n",
    "        #pass\n",
    "            \n",
    "            \n",
    "    def call(self, inputs, training=None):\n",
    "        x = super().call(inputs)\n",
    "        x = self.batch_norm(x, training=training)\n",
    "        if self.activation is not None:\n",
    "            x = self.activation(x)\n",
    "        return x\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "  \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import functools\n",
    "\n",
    "class ResidualMerge(tf.keras.layers.Layer):\n",
    "    \n",
    "    def __init__(self, name = 'block' ,**kwargs ):\n",
    "        \n",
    "        super().__init__(name = name)\n",
    "        self.shortcut = None\n",
    "        self.kwargs = kwargs\n",
    "        \n",
    "    \n",
    "    def build( self, input_shape ):\n",
    "        \n",
    "        x_shape = input_shape[0]\n",
    "        x_residual_shape = input_shape[1]\n",
    "        \n",
    "        if x_shape == x_residual_shape:\n",
    "            self.shortcut = functools.partial(tf.identity , name=self.name + '_shortcut')\n",
    "            \n",
    "        else:\n",
    "            \n",
    "            strides = (\n",
    "            \n",
    "                    int(round(x_shape[1]/x_residual_shape[1])),\n",
    "                    int(round(x_shape[2]/x_residual_shape[2]))\n",
    "            )\n",
    "            x_residual_channels = x_residual_shape[3]\n",
    "            \n",
    "            self.shortcut = ConvWithBatchNorm(filters = x_residual_channels ,\n",
    "                             kernel_size = (1,1) , strides = strides , activation=None , name = self.name + '_shortcut_c' ,**self.kwargs)\n",
    "            \n",
    "    def call(self , inputs  ):\n",
    "        \n",
    "        x , x_residual = inputs \n",
    "        x_shortcut = self.shortcut(x)\n",
    "        x_merge = add([ x_shortcut , x_residual ])\n",
    "        return x_merge\n",
    "        \n",
    "        \n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "class BasicResidualBlock(tf.keras.Model):\n",
    "    \n",
    "    def __init__(self, filters=16, kernel_size=1, strides=1, activation='relu',\n",
    "                 kernel_initializer='he_normal', kernel_regularizer=regulizers.l2(1e-4),\n",
    "                 name='res_basic', **kwargs):\n",
    "        \n",
    "        \n",
    "        super().__init__(name = name )\n",
    "        \n",
    "        self.conv1 = ConvWithBatchNorm(filters = filters , kernel_size=kernel_size ,\n",
    "                      strides = strides,padding = 'same' ,activation=activation ,\n",
    "                      kernel_initializer=kernel_initializer , kernel_regularizer=kernel_regularizer,\n",
    "                      name = name + '_cb_1' , **kwargs)\n",
    "        \n",
    "        self.conv2 = ConvWithBatchNorm(filters = filters , kernel_size=kernel_size , strides=strides,\n",
    "                                      padding = 'same' , activation=activation , kernel_initializer=kernel_initializer,\n",
    "                                      kernel_regularizer=kernel_regularizer)\n",
    "        '''\n",
    "        self.conv3 = ConvWithBatchNorm( filters=filters , kernel_size=kernel_size , strides=strides,padding='same',\n",
    "                                      kernel_initializer=kernel_initializer , kernel_regularizer=kernel_regularizer)\n",
    "        \n",
    "        '''\n",
    "        \n",
    "        self.merge = ResidualMerge(kernel_initializer=kernel_initializer , kernel_regularizer=kernel_regularizer,\n",
    "                                  name = name)\n",
    "        \n",
    "        self.activation = Activation(activation , name = name + '_act')\n",
    "        \n",
    "    \n",
    "    \n",
    "    def build( self, input_shape ):\n",
    "        pass\n",
    "    \n",
    "    \n",
    "    def call(self, inputs , training = None ):\n",
    "        \n",
    "        x =  inputs\n",
    "        \n",
    "        x_residual = self.conv1(x , training = training)\n",
    "        x_residual = self.conv2( x_residual , training = training)\n",
    "        \n",
    "        x_merge = self.merge([ x , x_residual])\n",
    "        x_merge = self.activation(x_merge)\n",
    "        \n",
    "        return x_merge\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ResidualBlockWithBottleneck(tf.keras.Model):\n",
    "    \n",
    "    def __init__( self, filters = 16 , kernel_size = 1 , strides =   1, activation = 'relu',\n",
    "               kernel_initializer='he_normal', kernel_regularizer=regulizers.l2(1e-4),\n",
    "                 name='res_basic', **kwargs):\n",
    "        \n",
    "        \n",
    "        super().__init__(name = name )\n",
    "        \n",
    "        self.conv0 = ConvWithBatchNorm( filters=filters , kernel_size=kernel_size , strides=strides,\n",
    "                                      padding = 'same' , activation=activation , kernel_initializer=kernel_initializer,kernel_regularizer=kernel_regularizer)\n",
    "        \n",
    "        self.conv1 = ConvWithBatchNorm( filters=filters , kernel_size=kernel_size , strides=strides,\n",
    "                                      padding = 'same' , activation=activation , kernel_initializer=kernel_initializer,\n",
    "                                      kernel_regularizer= kernel_regularizer )\n",
    "        \n",
    "        self.conv2 = ConvWithBatchNorm(filters=filters , kernel_size=kernel_size , strides=strides , padding = 'same' , activation=activation,\n",
    "                                      kernel_initializer=kernel_initializer , kernel_regularizer=kernel_regularizer)\n",
    "        \n",
    "        \n",
    "        self.merge = ResidualMerge(kernel_initializer=kernel_initializer , kernel_regularizer=kernel_regularizer , name = name )\n",
    "        self.activation = Activation(activation=activation , name = name + '_act')\n",
    "        \n",
    "        \n",
    "        \n",
    "    def buiild(self, input_shape):\n",
    "        pass\n",
    "    \n",
    "    \n",
    "    def call(self, inputs , training = None ):\n",
    "        \n",
    "        x = inputs\n",
    "        x_residual = self.conv0(x , training = training)\n",
    "        x_residual = self.conv1(x_residual , training =training)\n",
    "        x_residual = self.conv2(x_residual , training = training)\n",
    "        \n",
    "        x_merge = self.merge([x , x_residual])\n",
    "        x_merge = self.activation(x_merge)\n",
    "        return x_merge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ResidualMacroBlock(tf.keras.models.Sequential):\n",
    "    \"\"\" Macro-block, chaining multiple residual blocks (as a Sequential model)\"\"\"\n",
    "\n",
    "    def __init__(self, block_class=ResidualBlockWithBottleneck, repetitions=3, \n",
    "                 filters=16, kernel_size=1, strides=1, activation='relu',\n",
    "                 kernel_initializer='he_normal', kernel_regularizer=regulizers.l2(1e-4),\n",
    "                 name='res_macroblock', **kwargs):\n",
    "        \n",
    "        \n",
    "        layer_lst = []\n",
    "        for i in range(repetitions):\n",
    "            block_class_object = block_class(filters =filters , kernel_size=kernel_size ,\n",
    "                                            strides = strides if i==0 else 1 , name = \"{}_{}\".format(name , i ),\n",
    "                                            kernel_initializer = kernel_initializer , kernel_regularizer = kernel_regularizer)\n",
    "            layer_lst.append(block_class_object)\n",
    "            \n",
    "        \n",
    "        super().__init__(layer_lst , name = name )\n",
    "        \n",
    "        \n",
    "    \n",
    "    def build(self, input_shape):\n",
    "        pass\n",
    "    \n",
    "    \n",
    "    \n",
    "    #def call(self, input_shape):\n",
    "        # always return tensor value\n",
    "        #pass\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ResNet(tf.keras.models.Sequential):\n",
    "    \"\"\" ResNet model for classification\"\"\"\n",
    "\n",
    "    def __init__(self, input_shape, num_classes=1000, \n",
    "                 block_class=ResidualBlockWithBottleneck, repetitions=(2, 2, 2, 2),\n",
    "                 kernel_initializer='he_normal', kernel_regularizer=regulizers.l2(1e-4),\n",
    "                 name='resnet'):\n",
    "        \n",
    "        \n",
    "        filters = 64\n",
    "        strides = 2\n",
    "        \n",
    "        seq_lst  = []\n",
    "        \n",
    "        seq_lst.append(Input( shape = input_shape , name = 'input'))\n",
    "        seq_lst.append(ConvWithBatchNorm( filters = filters , kernel_size = 7 , strides = strides , padding = 'same',\n",
    "                     kernel_initializer = kernel_initializer , kernel_regularizer =kernel_regularizer,name = 'conv'))\n",
    "        seq_lst.append(MaxPooling2D(pool_size = 3 , strides= strides, padding = 'same' , name = 'max_pool'))\n",
    "        \n",
    "        for i, repet in enumerate(repetitions):\n",
    "            residual_block_obj = ResidualMacroBlock(block_class=block_class, repetitions=repet, filters=min(filters * (2 ** i), 1024), kernel_size=3, activation='relu',\n",
    "                     strides=strides if i != 0 else 1, name='block_{}'.format(i),\n",
    "                     kernel_initializer=kernel_initializer, kernel_regularizer=kernel_regularizer)\n",
    "            seq_lst.append(residual_block_obj)\n",
    "                \n",
    "        \n",
    "        seq_lst.append(GlobalAveragePooling2D(name='avg_pool'))\n",
    "        seq_lst.append(  Dense(units=num_classes, kernel_initializer=kernel_initializer, activation='softmax'))\n",
    "        \n",
    "        \n",
    "        super().__init__(seq_lst , name = name )\n",
    "        \n",
    "        \n",
    "        \n",
    "    \n",
    "    def build(self, input_shape):\n",
    "        pass\n",
    "    \n",
    "    \n",
    "    #def call(self, input_shape):\n",
    "        #pass\n",
    "        \n",
    "                \n",
    "                \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ResNet18(ResNet):\n",
    "    def __init__(self, input_shape, num_classes=1000, name='resnet18',kernel_initializer='he_normal', kernel_regularizer=regulizers.l2(1e-4)):\n",
    "        \n",
    "        super().__init__(input_shape, num_classes, block_class=BasicResidualBlock, repetitions=(2, 2, 2, 2),\n",
    "                         kernel_initializer=kernel_initializer, kernel_regularizer=kernel_regularizer)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FD4D648>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FD4D648>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FD4D648>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FD4D648>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF5A2C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF5A2C8>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING: Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF5A2C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF5A2C8>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF5A288>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF5A288>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF5A288>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF5A288>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF39948>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF39948>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF39948>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF39948>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF62048>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF62048>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF62048>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF62048>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF32D08>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF32D08>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF32D08>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF32D08>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D300D8D88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D300D8D88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D300D8D88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D300D8D88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FC95388>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FC95388>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FC95388>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FC95388>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FC95808>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FC95808>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FC95808>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FC95808>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF43B88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF43B88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF43B88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF43B88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF4BFC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF4BFC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF4BFC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF4BFC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D30316148>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D30316148>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D30316148>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D30316148>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF59E48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF59E48>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING: Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF59E48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF59E48>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF58088>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF58088>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF58088>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF58088>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF58488>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF58488>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF58488>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF58488>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF64848>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF64848>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF64848>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF64848>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF67BC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF67BC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF67BC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF67BC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D303DEF48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D303DEF48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D303DEF48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D303DEF48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF6A5C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF6A5C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF6A5C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF6A5C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6AA48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6AA48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6AA48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6AA48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6D188>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6D188>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6D188>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF6D188>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF71248>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF71248>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF71248>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF71248>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31761808>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31761808>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31761808>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31761808>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF74208>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF74208>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING: Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF74208>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF74208>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF74348>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF74348>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF74348>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF74348>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF74748>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF74748>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF74748>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF74748>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF78B08>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF78B08>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF78B08>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF78B08>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF7BF48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF7BF48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF7BF48>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF7BF48>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D319ACC88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D319ACC88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D319ACC88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D319ACC88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF7D948>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF7D948>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF7D948>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF7D948>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF7DDC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF7DDC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF7DDC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF7DDC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF831C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF831C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF831C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF831C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF86608>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF86608>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF86608>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF86608>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31AE2F88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31AE2F88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31AE2F88>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31AE2F88>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF894C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF894C8>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING: Entity <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF894C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method Sequential.call of <__main__.ResidualMacroBlock object at 0x0000019D2FF894C8>>: AttributeError: module 'gast' has no attribute 'Num'\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF89688>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF89688>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF89688>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF89688>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF89AC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF89AC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF89AC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF89AC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF8B208>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF8B208>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF8B208>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF8B208>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF91308>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF91308>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF91308>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF91308>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31F483C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31F483C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31F483C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D31F483C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF91CC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF91CC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF91CC8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method BasicResidualBlock.call of <__main__.BasicResidualBlock object at 0x0000019D2FF91CC8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF94188>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF94188>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF94188>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF94188>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF96548>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF96548>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF96548>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D2FF96548>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF9A988>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF9A988>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF9A988>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ResidualMerge.call of <__main__.ResidualMerge object at 0x0000019D2FF9A988>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING:tensorflow:Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D320C64C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D320C64C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n",
      "WARNING: Entity <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D320C64C8>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: converting <bound method ConvWithBatchNorm.call of <__main__.ConvWithBatchNorm object at 0x0000019D320C64C8>>: AssertionError: Bad argument number for Name: 3, expecting 4\n"
     ]
    }
   ],
   "source": [
    "input_shape = [224, 224, 3]\n",
    "model = ResNet18(input_shape, 1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"resnet\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "conv_c (ConvWithBatchNorm)   (None, 112, 112, 64)      9728      \n",
      "_________________________________________________________________\n",
      "max_pool (MaxPooling2D)      (None, 56, 56, 64)        0         \n",
      "_________________________________________________________________\n",
      "block_0 (ResidualMacroBlock) (None, 56, 56, 64)        157568    \n",
      "_________________________________________________________________\n",
      "block_1 (ResidualMacroBlock) (None, 14, 14, 128)       544512    \n",
      "_________________________________________________________________\n",
      "block_2 (ResidualMacroBlock) (None, 4, 4, 256)         2170368   \n",
      "_________________________________________________________________\n",
      "block_3 (ResidualMacroBlock) (None, 1, 1, 512)         8666112   \n",
      "_________________________________________________________________\n",
      "avg_pool (GlobalAveragePooli (None, 512)               0         \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 1000)              513000    \n",
      "=================================================================\n",
      "Total params: 12,061,288\n",
      "Trainable params: 12,049,640\n",
      "Non-trainable params: 11,648\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
